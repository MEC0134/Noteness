{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateNote.jsx","components/App.jsx","index.js"],"names":["Header","_ref","onColorChange","background","React","createElement","style","backgroundColor","CropPortraitIcon","className","sx","color","onClick","year","Date","getFullYear","Footer","Note","props","title","content","onDelete","id","IconButton","aria-label","size","DeleteIcon","fontSize","CreateNote","_useState","useState","_useState2","_slicedToArray","note","setNote","_useState3","_useState4","formErrors","setFormErrors","_useState5","numberOfRows","zoomIn","inpPlaceHold","hidden","_useState6","showForm","setShowForm","handleInputs","event","_event$target","target","name","value","_objectSpread","_defineProperty","placeholder","type","onChange","rows","Zoom","in","timeout","enter","Fab","preventDefault","trim","prevErrors","onAddNote","AddIcon","App","intialColors","notesArr","setNotesArr","showGuide","setShowGuide","backgroundColors","setBackgroundColors","handleDelete","prevNotes","filter","index","useEffect","document","body","setTimeout","newNote","prevValue","concat","_toConsumableArray","map","key","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0170ac86.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CropPortraitIcon from '@mui/icons-material/CropPortrait';\r\n\r\nfunction Header({onColorChange, background}) {\r\n    return (\r\n        <header style={{backgroundColor: background}}>\r\n            <h1>\r\n                <CropPortraitIcon className=\"header-icon\" sx={{ color: \"white\" }} onClick={onColorChange} />\r\n                Noteness\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React from \"react\";\n\n\n// Get Current Year and display dynamically \nlet year = new Date().getFullYear();\n\n\nfunction Footer() {\n\n    return (\n        <footer><p>Copright &copy; {year}</p></footer>\n    )\n}\n\n\n\nexport default Footer;","import React from \"react\";\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n\nfunction Note(props) {\n\n    return (\n        <div className=\"note-card\">\n            <h1>{props.title}</h1>\n            <p>{props.content}</p>\n            <button onClick={() => { // trigger delete function\n                props.onDelete(props.id);\n            }}>\n            <IconButton aria-label=\"delete\" size=\"small\">\n                <DeleteIcon fontSize=\"inherit\" />\n            </IconButton>\n            </button>\n        </div>\n    )\n}\n\n\n\nexport default Note;","import React, { useState } from \"react\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Fab from '@mui/material/Fab';\r\nimport Zoom from '@mui/material/Zoom';\r\n\r\n\r\n\r\n\r\n\r\nfunction CreateNote(props) {\r\n\r\n    const [note, setNote] = useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({\r\n        title: false,\r\n        content: false\r\n    });\r\n\r\n    const [showForm, setShowForm] = useState({\r\n        numberOfRows: 1,\r\n        zoomIn: false,\r\n        inpPlaceHold: \"Take a note...\",\r\n        hidden: true\r\n    });\r\n\r\n    // Function to show full form on click\r\n    function showFullForm() {\r\n        setShowForm({\r\n            numberOfRows: 3,\r\n            zoomIn: true,\r\n            inpPlaceHold: \"Title\",\r\n            hidden: false\r\n        });\r\n    }\r\n\r\n    function handleInputs(event) {\r\n        const { name, value } = event.target;\r\n        setNote({ ...note, [name]: value });\r\n    }\r\n\r\n    // handle submission\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { title, content } = note;\r\n\r\n        // Input Validation\r\n        if (title.trim() === '') {\r\n            setFormErrors((prevErrors) => ({\r\n                ...prevErrors,\r\n                title: true\r\n            }));\r\n        } else if (content.trim() === '') {\r\n            setFormErrors((prevErrors) => ({\r\n                ...prevErrors,\r\n                content: true\r\n            }));\r\n        } else {\r\n            props.onAddNote(note);\r\n            setNote({ title: \"\", content: \"\" });\r\n            setFormErrors({ title: \"\", content: \"\" });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"create-note\">\r\n                <input\r\n                    name=\"title\"\r\n                    placeholder={showForm.inpPlaceHold}\r\n                    type=\"text\"\r\n                    value={note.title}\r\n                    onChange={handleInputs}\r\n                    onClick={showFullForm}\r\n                />\r\n                {formErrors.title && <span className=\"error\">Please enter a title!</span>}\r\n                <textarea\r\n                    name=\"content\"\r\n                    placeholder=\"What on your mind?\"\r\n                    rows={showForm.numberOfRows}\r\n                    value={note.content}\r\n                    onChange={handleInputs}\r\n                    hidden={showForm.hidden}\r\n                />\r\n                {formErrors.content && (<span className=\"error\">Please enter content!</span>)}\r\n                <Zoom in={showForm.zoomIn} timeout={{ enter: 1000 }}>\r\n                    <Fab color=\"primary\" aria-label=\"add\" onClick={handleSubmit}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Zoom>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default CreateNote;","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport CreateNote from \"./CreateNote\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const intialColors = [\"#00b4eb\", \"#e05a00\"];\r\n\r\n    const [notesArr, setNotesArr] = useState([]);\r\n    const [showGuide, setShowGuide] = useState(true);\r\n    const [backgroundColors, setBackgroundColors] = useState(intialColors);\r\n\r\n\r\n    function handleAddNotes(newNote) {\r\n        setNotesArr(prevValue => [...prevValue, newNote]);\r\n    }\r\n\r\n    function handleDelete(id) {\r\n        setNotesArr((prevNotes) => {\r\n            return prevNotes.filter((note, index) => {\r\n                return index !== id;\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    function handleBackGroundColor() {\r\n        if (backgroundColors[0] === intialColors[0]) {\r\n            setBackgroundColors([\"#526D82\", \"#27374D\"]);\r\n        } else {\r\n            setBackgroundColors(intialColors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.style.backgroundColor = backgroundColors[0];\r\n    }, [backgroundColors]);\r\n\r\n    function closeGuide() {\r\n        setShowGuide(false);\r\n    }\r\n\r\n    setTimeout(closeGuide, 9000);\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Header\r\n                onColorChange={handleBackGroundColor}\r\n                background={backgroundColors[1]}\r\n            />\r\n            <CreateNote\r\n                onAddNote={handleAddNotes}\r\n            />\r\n            {/* Map the notes */}\r\n            {notesArr.map((note, index) => (\r\n                <Note\r\n                    key={index}\r\n                    id={index}\r\n                    title={note.title}\r\n                    content={note.content}\r\n                    onDelete={handleDelete}\r\n                />\r\n            ))}\r\n\r\n            {showGuide && (\r\n                <div className=\"guide-card\">\r\n                    <h2>Simple Guide</h2>\r\n                    <ul>\r\n                        <li>Note taking is very intuitive and easy to understand.</li>\r\n                        <li>Click on brand icon for color change.</li>\r\n                    </ul>\r\n                </div>\r\n            )}\r\n\r\n\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./components/App\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n\n\n\n\n"],"sourceRoot":""}